/*********************************************************************
 * Name:      	main.cpp
 * Purpose:   	Implements simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:    
 * Created:   
 * Copyright: 
 * License:   	wxWidgets license (www.wxwidgets.org)
 * 
 * Notes:		Note that all GUI creation code is implemented in
 * 				gui.cpp source file which is generated by wxFormBuilder.
 *********************************************************************/

#include "main.h"

// initialize the application
IMPLEMENT_APP(MainApp);

////////////////////////////////////////////////////////////////////////////////
// application class implementation 
////////////////////////////////////////////////////////////////////////////////

bool MainApp::OnInit()
{
	SetTopWindow( new MainFrame( NULL ) );
	GetTopWindow()->Show();
	
	// true = enter the main loop
	return true;
}

////////////////////////////////////////////////////////////////////////////////
// main application frame implementation 
////////////////////////////////////////////////////////////////////////////////
#include <wx/fileconf.h>
#include <wx/stdpaths.h>
#include <deque>
#include <wx/any.h>
#include "ConfigIni.h"



void TestConfig(void)
{
	// ConfigIni test

	ConfigIni config;
	config.ReadIni();



	return;


	// config test
	wxString strAppName;
	if (wxTheApp)
	{
		strAppName = wxTheApp->GetAppName();
		if (strAppName.IsEmpty())
		{
			strAppName = "config";
		}
		else
		{
			strAppName = strAppName.Left(strAppName.Find('_'));
		}
	}
	wxString strConfigName = wxString::Format("%s.ini", strAppName);

	wxString strAppPath = wxStandardPaths::Get().GetDataDir();
	if (!strAppPath.IsEmpty())
	{
		strConfigName = strAppPath + "\\" + strConfigName;
	}

	wxFileConfig cfg(wxEmptyString, wxEmptyString, strConfigName, wxEmptyString, wxCONFIG_USE_LOCAL_FILE | wxCONFIG_USE_RELATIVE_PATH | wxCONFIG_USE_NO_ESCAPE_CHARACTERS);
	cfg.SetExpandEnvVars(false);

	wxString strValue;

	cfg.SetPath("/");
	strValue = cfg.Read("root1");
	strValue = cfg.Read("root2");

	cfg.SetPath("/cfg");
	strValue = cfg.Read("cfg1");


	long nIdx = 0;
	wxString strEntry;
	std::deque<wxString> dqEntries;
	if (cfg.GetFirstGroup(strEntry, nIdx))
	{
		dqEntries.push_back(strEntry);
		while (cfg.GetNextGroup(strEntry, nIdx))
		{
			dqEntries.push_back(strEntry);
		}
	}

	for (size_t ii = 0, iLoop = dqEntries.size();
		ii < iLoop; ++ii)
	{
		cfg.SetPath(dqEntries[ii]);
		strValue = cfg.Read("item");
		cfg.SetPath("..");
	}

	cfg.SetPath("/def");
	strValue = cfg.Read("def");


	cfg.SetPath("items");
	dqEntries.clear();
	if (cfg.GetFirstGroup(strEntry, nIdx))
	{
		dqEntries.push_back(strEntry);
		while (cfg.GetNextGroup(strEntry, nIdx))
		{
			dqEntries.push_back(strEntry);
		}
	}

	for (size_t ii = 0, iLoop = dqEntries.size();
		ii < iLoop; ++ii)
	{
		cfg.SetPath(dqEntries[ii]);
		strValue = cfg.Read("item");
		cfg.SetPath("..");
	}




	/*
	root1 = root1
	root2 = root2

	[cfg]
	cfg1 = cfg1
	[cfg/item1]
	item = item
	[cfg/item2]
	item = item
	[cfg/item3]
	item = item

	[def]
	def = def
	[def/items/item1]
	item = item
	*/

}
MainFrame::MainFrame(wxWindow *parent) : MainFrameBase( parent )
{
	TestConfig();
}

MainFrame::~MainFrame()
{
}

void MainFrame::OnCloseFrame(wxCloseEvent& event)
{
	Destroy();
}

void MainFrame::OnExitClick(wxCommandEvent& event)
{
	Destroy();
}
